---
import Base from "../layouts/Base.astro";

type ProjectCardProps = {
  title: string
  description: string
  role: string
  period?: string
  achievements: string[]
  technologies: string[]
  href: string
}

const title = "Ronit â€¢ projects";

// Project data
const projects: ProjectCardProps[]= [
  {
    title: "Travelshare",
    period: "(Nov 2024 - present)",
    role: "creator",
    description: "A place where you can share unexplored places with stunning photos and precise locations.",
    achievements: [
      "grew project to 400+ users",
      "Used modern technologies.",
      "modernized the UI/UX",

    ],
    technologies: ["typescript", "next.js", "postgres", "prisma", "tailwind css", "auth.js", "uploadthing"],
    href: "https://github.com/ronitrajfr/travelshare" // Add your project href here
  },
  {
    title: "preve",
    period: "(Apr 2024)",
    role: "creator",
    description: "Drop your PDFs into Preve for summaries, key points, details, and questions.",
    achievements: [
      "grew project to 100+ users",
      "It was my first project so it was a learning experience for me.",
      "Wrote blog post about it"
    ],
    technologies: ["typescript", "next.js","gemini",  "postgres", "prisma", "tailwind css", "auth.js", "uploadthing"],
    href: "https://github.com/ronitrajfr/preve" // Add your project link here
  },
  {
    title: "askReddit",
    period: "(Aug 2024)",
    role: "creator",
    description: "Get result from your fav site instantly alongside google search results.",
    achievements: [
      "First time I made a chrome extension",
      "compatible with Reddit, Twitter, Wikipedia, Medium  etc.."
 
    ],
    technologies: ["javascript", "google-api"],
    href: "https://x.com/ronitrajfr/status/1823619565148156384" // Add your project link here
  },
  {
    title: "anonGPT",
    period: "(Aug 2024)",
    role: "creator",
    description: "Fast and accurate information retrieval, no more endless searching.",
    achievements: [
      "grew project to 100+ users",
      "First time I tried to stream ai responses to users.",
      "launched on peerlist"
    ],
    technologies: ["typescript", "next.js","gemini",  "postgres", "prisma", "tailwind css", "auth.js"],
    href: "https://github.com/ronitrajfr/anongpt" // Add your project link here
  },

  {
    title: "procise",
    period: "(Jul 2024)",
    role: "creator",
    description: "An AI powered hackernews comments summarizer.",
    achievements: [
      "grew project to 100+ users",
      "First time I used cloudflare workers and pages.",
      "launched on twitter"
    ],
    technologies: ["typescript", "next.js","cf-worker",  "cf-pages", "cf-ai", "tailwind css"],
    href: "https://github.com/ronitrajfr/procise" // Add your project link here
  },

  {
    title: "postbox",
    period: "(Oct 2024)",
    role: "creator",
    description: "An open-source tool designed specifically for testing APIs effectively and efficiently. ",
    achievements: [
      "grew project to 300+ users",
      "8k+ views on twitter"
    ],
    technologies: ["typescript", "next.js","tailwind css", "zod"],
    href: "https://github.com/ronitrajfr/postbox" 
  },
  {
    title: "Celing",
    period: "(Oct 2024)",
    role: "creator",
    description: "CLI that adds license in your project right from your terminal. ",
    achievements: [
      "grew project to 300+ downloads",
      "First time I made a cli tool"
    ],
    technologies: ["javascript", "npm"],
    href: "https://github.com/ronitrajfr/Celing"
  }
 
 
];
---

<Base {title} description="Ronit Raj is a full stack developer with a passion for building things and solving problems. This is his personal website and some blog posts.">
  <main class="max-w-3xl ">
     <div class="prose">
      <p class="text-4xl mb-4 pt-7 text-white  font-semibold">
        <span class="text-[#ff6b35]">*</span>
        <span  id="scrambleText">Projects</span>
      </p>
  
  
      <p class="text-gray-400 mb-12">
       I just loving building things and sharing about it on twitter. Here are some of the projects i've worked on. 
      </p>
     </div>
  

    <div class="space-y-8">
      {projects.map(project => (
        <a
          href={project.href}
          target="_blank"
          class="block p-6 border border-gray-800 rounded-lg transition-colors hover:border-[#ff6b35] group"
        >
          <div class="flex items-start justify-between">
            <h2 class="text-2xl  font-semibold font-mono group group-hover:text-[#ff6b35] transition-colors">
              {project.title}
            </h2>
            <svg xmlns="http://www.w3.org/2000/svg"class='group-hover:text-[#ff6b35] transition-colors text-gray-500 h-5 w-5'  viewBox="0 0 24 24"><path fill="currentColor" d="M6.4 18L5 16.6L14.6 7H6V5h12v12h-2V8.4z"/></svg>
          </div>

          <p class="text-gray-500 mt-1">
            {project.role} {project.period}
          </p>

          <p class="text-gray-400 mt-4 font-base">{project.description}</p>

          {project.achievements.length > 0 && (
            <div class="mt-6">
              <h3 class="text-white mb-2">achievements</h3>
              <ul class="list-disc list-inside text-gray-400 space-y-1">
                {project.achievements.map(achievement => (
                  <li>{achievement}</li>
                ))}
              </ul>
            </div>
          )}

          {project.technologies.length > 0 && (
            <div class="mt-6">
              <h3 class="text-white mb-2">technologies</h3>
              <div class="flex flex-wrap gap-2">
                {project.technologies.map(tech => (
                  <span class="px-2 py-1 bg-gray-800 rounded text-sm text-gray-400">
                    {tech}
                  </span>
                ))}
              </div>
            </div>
          )}
        </a>
      ))}
    </div>
  </main>
</Base>

<script>
  const characters = 'abcdefghijklmnopqrstuvwxyz'
  const scrambleText = document.getElementById('scrambleText')
  const originalText = scrambleText?.textContent || ''
  const scrambleDelay = 2000
  const updateInterval = 50

  function scramble() {
    if (!scrambleText) return
    
    let iterations = 0
    const maxIterations = 10

    const interval = setInterval(() => {
      scrambleText.textContent = originalText
        .split('')
        .map((char, idx) => {
          if (char === ' ') return ' '
          if (idx < iterations) return originalText[idx]
          return characters[Math.floor(Math.random() * characters.length)]
        })
        .join('')

      iterations += 1/3

      if (iterations >= maxIterations) {
        clearInterval(interval)
        scrambleText.textContent = originalText
      }
    }, updateInterval)
  }

  // Initial scramble
  scramble()

  // Periodic scramble
</script>